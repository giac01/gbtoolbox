% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_correlations.R
\name{plot_correlations}
\alias{plot_correlations}
\title{Create a ggplot2 Correlation Matrix}
\usage{
plot_correlations(
  dat,
  variable_labels = NULL,
  textadjust = 2,
  sample_size = TRUE,
  confidence_interval = TRUE,
  low_colour = "#0072B2",
  high_colour = "#D55E00",
  mid_colour = "white",
  abs_colour = TRUE,
  cluster_variables = FALSE,
  n_decimal_places = 2
)
}
\arguments{
\item{dat}{Input dataframe or matrix (*do not input a correlation matrix*).}

\item{variable_labels}{Character vector of variable Labels, corresponding to each column in dat. If missing (NULL) then colnames(dat) will be used.}

\item{textadjust}{Scalar. Adjust text size by a magnification factor.}

\item{sample_size}{Logical. Include sample size on upper diagononal (TRUE) or leave blank (FALSE).}

\item{confidence_interval}{Logical. Include confidence interval on upper diagonal (TRUE) or leave blank (FALSE).}

\item{low_colour}{Logical. Hex colour code for the lowest correlation.}

\item{high_colour}{Logical. Hex colour code for the highest correlation.}

\item{abs_colour}{Logical. If TRUE, will use the absolute correlation (i.e. ignoring whether the correlation is positive or negative) for determining square colour.}

\item{n_decimal_places}{How many decimal places to use for plotting}
}
\value{
ggplot
}
\description{
The function provides a wrapper around ggplot2 to quickly create a correlation matrix.
}
\examples{
X = sapply(1:10, function(i) rnorm(100))
X = as.data.frame(X)
My_Labels = c(paste0("Predictor ",1:5), paste0("Outcome ",1:5))

plot_correlations(X, variable_labels = My_Labels, sample_size = TRUE, confidence_interval = FALSE)

plot_correlations(X, variable_labels = My_Labels, sample_size = TRUE, confidence_interval = FALSE) + ggplot2::labs(title = "My Title")
}
